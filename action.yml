# Copyright (c) https://github.com/UWU-TEAM 2025-present
# Copyright (c) https://github.com/linastorvaldz 2025-present

name: "ü¶ä Orangefox Recovery Builder"
description: "Build OrangeFox Recovery with Github Action"
author: "linastorvaldz"

branding:
  icon: 'terminal'
  color: 'yellow'

inputs:
  FOX_SYNC_BRANCH:
    description: 'Manifest Branch'
    type: string
  USER_NAME:
    description: 'Your GitHub username'
    type: string
  USER_EMAIL:
    description: 'Your GitHub email'
    type: string
  KERNEL_TREE:
    description: 'Your device kernel tree'
    type: string
  KERNEL_BRANCH:
    description: 'Kernel tree branch'
    type: string
  KERNEL_PATH:
    description: 'Path to kernel directory'
    type: string
  DEVICE_TREE:
    description: 'Device tree repository'
    type: string
  DEVICE_TREE_BRANCH:
    description: 'Device tree branch'
    type: string
  DEVICE_PATH:
    description: 'Path to device tree'
    type: string
  DEVICE_NAME:
    description: 'Specify your device codename'
    type: string
  BUILD_TARGET:
    description: 'Specify Your Build Target'
    type: string
  COMMON_TREE:
    description: 'Your device common tree (if exists)'
    type: string
  COMMON_BRANCH:
    description: 'Your device common tree branch'
    type: string
  COMMON_PATH:
    description: 'Path to your common device tree'
    type: string
  MAINTAINER_URL:
    description: 'Image size must be 192x192'
    type: string
  TG_CHAT_ID:
    description: 'Telegram Chat ID'
    type: string
  TG_TOKEN:
    description: 'Telegram Bot Token'
    type: string

runs:
  using: 'composite'
  steps:

    - name: üóëÔ∏è Clean-up
      uses: rokibhasansagar/slimhub_actions@main

    - name: üíΩ Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12

    - name: üé° Set GitHub Path
      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}

    - name: üè¢ Build Environment
      shell: bash
      run: |
        sudo apt-get install -y aria2
        git clone --depth=1 https://gitlab.com/OrangeFox/misc/scripts.git -b master .sc
        sudo bash .sc/setup/android_build_env.sh

    - name: üé° Set-up Manifest Sync
      shell: bash
      env:
        TG_CHAT_ID: ${{ inputs.TG_CHAT_ID }}
        TG_TOKEN: ${{ inputs.TG_TOKEN }}
        GITHUB_ACTION_PATH: ${{ github.action_path }}
      run: |
        source config.sh

        mkdir -p ${GITHUB_ACTION_PATH}/OrangeFox
        cd ${GITHUB_ACTION_PATH}/OrangeFox
        git config --global user.name "${{ inputs.USER_NAME }}"
        git config --global user.email "${{ inputs.USER_EMAIL }}"

        git clone --depth=1 https://gitlab.com/OrangeFox/sync.git
        cd sync
        ./orangefox_sync.sh \
        --branch ${{ inputs.FOX_SYNC_BRANCH }} \
        --path ${GITHUB_ACTION_PATH}/OrangeFox/fox_${{ inputs.FOX_SYNC_BRANCH }}
        cd -

        cd ${GITHUB_ACTION_PATH}/OrangeFox/fox_${{ inputs.FOX_SYNC_BRANCH }}
        if [[ ! -d bootable/recovery/gui/theme ]]; then
            git clone --depth=1 \
            https://gitlab.com/OrangeFox/misc/theme.git \
            bootable/recovery/gui/theme
        fi
        if [[ ! -d external/nano ]]; then
            git clone --depth=1 \
            https://github.com/LineageOS/android_external_nano \
            -b lineage-19.1 \
            external/nano
        fi
        if [[ ! -d external/libncurses ]]; then
            git clone --depth=1 \
            https://github.com/LineageOS/android_external_libncurses \
            -b lineage-19.1 \
            external/libncurses
        fi
        if [[ ! -d external/bash ]]; then
            git clone --depth=1 \
            https://github.com/LineageOS/android_external_bash \
            -b lineage-19.1 \
            external/bash
        fi
        if [[ ! -d external/lptools ]]; then
            git clone --depth=1 \
            https://github.com/phhusson/vendor_lptools \
            external/lptools
        fi
        if [[ -n "${{ inputs.MAINTAINER_URL }}" ]]; then
            wget -q ${{ inputs.MAINTAINER_URL }} -O ${GITHUB_ACTION_PATH}/maintainer.png
            cp -r ${GITHUB_ACTION_PATH}/maintainer.png bootable/recovery/gui/theme/portrait_hdpi/images/Default/About
        fi
        if [[ -n "${{ inputs.KERNEL_TREE }}" ]]; then
            git clone --depth=1 \
            ${{ inputs.KERNEL_TREE }} \
            -b ${{ inputs.KERNEL_BRANCH }} \
            ${{ inputs.KERNEL_PATH }}
        fi
        if [[ -n "${{ inputs.COMMON_TREE }}" ]]; then
            git clone --depth=1 \
            ${{ inputs.COMMON_TREE }} \
            -b ${{ inputs.COMMON_BRANCH }} \
            ${{ inputs.COMMON_PATH }}
        fi
        if [[ -n "${{ inputs.DEVICE_TREE }}" ]]; then
            git clone --depth=1 \
            ${{ inputs.DEVICE_TREE }} \
            -b ${{ inputs.DEVICE_TREE_BRANCH }} \
            ${{ inputs.DEVICE_PATH }}
        fi

    - name: ü¶ä Building OrangeFox
      shell: bash
      env:
        TG_CHAT_ID: ${{ inputs.TG_CHAT_ID }}
        TG_TOKEN: ${{ inputs.TG_TOKEN }}
        FOX_BRANCH: ${{ inputs.FOX_SYNC_BRANCH }}
        CODENAME: ${{ inputs.DEVICE_NAME }}
        DEVICE_PATH: ${{ inputs.DEVICE_PATH }}
        BUILD_TARGET: ${{ inputs.BUILD_TARGET }}
        GITHUB_ACTION_PATH: ${{ github.action_path }}
      run: |
        source config.sh
        timeStart

        cd ${GITHUB_ACTION_PATH}/OrangeFox/fox_$FOX_BRANCH
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        BUILDLOG=$(realpath ./build.log)
        DEVICE=$(grep "PRODUCT_MODEL :=" ./$DEVICE_PATH/twrp_$CODENAME.mk -m 1 | cut -d = -f 2)

        lunch twrp_$CODENAME-eng
        sleep 5
        build_message "Building... üõ†Ô∏è"
        mkfifo -m 644 reading
        tee -a ${BUILDLOG} < reading & progress & mka adbd ${BUILD_TARGET}image -j$(nproc --all) > reading
        retVal=$?
        timeEnd
        buildStatus

        EV1=$(TZ=$TZ date +%Y%m%d-%H%M)
        EV2=$DEVICE
        EV3=$(ls -lh ./out/target/product/$CODENAME/OrangeFox*.zip | cut -d ' ' -f5)
        EV4=$(ls -lh ./out/target/product/$CODENAME/OrangeFox*.img | cut -d ' ' -f5)
        EV5=$(md5sum ./out/target/product/$CODENAME/OrangeFox*.zip | cut -d ' ' -f1)
        EV6=$(sha1sum ./out/target/product/$CODENAME/OrangeFox*.zip | cut -d ' ' -f1)
        EV7=$(md5sum ./out/target/product/$CODENAME/OrangeFox*.img | cut -d ' ' -f1)
        EV8=$(sha1sum ./out/target/product/$CODENAME/OrangeFox*.img | cut -d ' ' -f1)
        EV10=$(grep "#### build completed successfully" $BUILDLOG -m 1 | cut -d '(' -f 2)
        export BUILD_DATE=${EV1}
        export DEVICE=${EV2}
        export ORF_ZIP_SIZE=${EV3}
        export ORF_IMG_SIZE=${EV4}
        export ORF_ZIP_MD5=${EV5}
        export ORF_ZIP_SHA1=${EV6}
        export ORF_IMG_MD5=${EV7}
        export ORF_IMG_SHA1=${EV8}
        export ORF_GHREPO="https://github.com/${{ github.repository }}"
        export ORF_TAG=${{ github.run_id }}
        export ORF_TIME=${EV10}

        sleep 2
        ORF_FILES=$(realpath ./out/target/product/$CODENAME/{OrangeFox*.zip,OrangeFox*.img})
        bash notes.sh
        gh release create "$ORF_TAG" "$ORF_FILES" --title "ü¶ä OrangeFox Recovery for ${DEVICE} (${CODENAME}) // ${BUILD_DATE}" -F ${GITHUB_ACTION_PATH}/release-notes.md -R "${{ github.repository }}"
        post_message
